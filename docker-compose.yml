version: "3.6"

services:
    keycloak-server:
        image: quay.io/keycloak/keycloak:latest
        container_name: keycloak
        volumes:
            - ./keycloak/realms:/opt/keycloak/data/import
        environment:
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://postgres-server:5432/keycloak
            KC_DB_USERNAME: ${POSTGRES_USERNAME}
            KC_DB_PASSWORD: ${POSTGRES_PASSWORD}

            KC_HOSTNAME: localhost
            KC_HOSTNAME_PORT: 8080
            KC_HOSTNAME_STRICT: false
            KC_HOSTNAME_STRICT_HTTPS: false

            KC_LOG_LEVEL: info
            KC_METRICS_ENABLED: true
            KC_HEALTH_ENABLED: true
            KEYCLOAK_ADMIN: ${ADMIN_USERNAME}
            KEYCLOAK_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
        command: start-dev  --import-realm
        depends_on:
            - postgres-server
        ports:
            - 8080:8080
        env_file:
            - .env

    postgres-server:
        container_name: ${POSTGRES_HOST}
        image: postgres:15
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: keycloak
            POSTGRES_USER: ${POSTGRES_USERNAME}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        ports:
            - "5432:${POSTGRES_PORT}"
        env_file:
            - .env

    websocket-server:
        container_name: websocket
        restart: always
        build:
            context: ./websocket
            dockerfile: Dockerfile
        ports:
            - "3000:${PORT}"
        volumes:
            - ./websocket:/usr/src/app
        depends_on:
            - keycloak-server
        env_file:
            - .env

    backend-server:
        container_name: backend
        restart: always
        build:
            context: ./backend
            dockerfile: Dockerfile
        ports:
            - "4000:${BACKEND_PORT}"
        volumes:
            - ./backend:/usr/src/app
        depends_on:
            - keycloak-server
        env_file:
            - .env

volumes:
    postgres_data:
